uniform float iTime;
uniform float2 iResolution;

// random
float r(float n) {
  return fract(sin(n)*43758.5453);
}

float n(float v) {
  return mix(r(floor(v)),r(floor(v)+1.),smoothstep(0.,1.,fract(v)));
}

// hue
vec4 h(float v) {
  return .6 + .6 * cos(6.3*(v) + vec4(0,23,21,0) );
}

void w(vec2 u, float s, inout vec4 C)
{
    float   t = n(u.x)*n(u.x-s-iTime)+.4 //top edge
            ,b = n(u.x+5.)*n(u.x-9.-s-iTime)-.8; //bottom edge

    C = mix(C,
            h(s*.2+iTime*.3+u.x*.1),
            pow(abs((u.y-b)/(t-b)-.5)*2.,9.)+.05)*smoothstep(0.,5./iResolution.y,(t-u.y)*(u.y-b));
}

half4 main(vec2 g) {
    vec4 C;
    vec2 r = iResolution.xy
        ,u = (g+g-r)/r.y;

    u.x-=iTime/5.;
    for (float s = 1.5; s > 0.; s-=.1)
        w(u*vec2(2.,1.+s),-s,C);
    return C;
}
